version: 2.1
jobs:
    checkout:
        docker:
            - image: cimg/openjdk:17.0
        steps:
            - checkout
            - restore_cache:
                key: loghublog4j2-{{ checksum "pom.xml" }}
            - run: mkdir -p /home/circleci/.sonar/cache /home/circleci/.m2/repository
            - run:
                # A bug in dependency:go-offline, see https://issues.apache.org/jira/browse/MDEP-688
                command: "mvn -B dependency:resolve dependency:resolve-plugins sonar:help jacoco:help surefire:help -Psonar,versions,gpgsign -s .circleci/settings.xml"
                environment:
                    MAVEN_OPTS: "-Xmx1024m"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
                    - home/circleci/project
    build:
        docker:
            - image: cimg/openjdk:17.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: mvn -B clean compile -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx2048m"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/project/target
    testsj18:
        docker:
            - image: cimg/openjdk:18.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    # If no symbolic name, it's a PR, will run sonar
                    if [ -n "$(git symbolic-ref HEAD 2>/dev/null )" ] ; then
                        SONAR="jacoco:report sonar:sonar -Psonar"
                        echo "Doing sonar"
                    else
                        SONAR=""
                    fi
                    mkdir -p /tmp/$CIRCLE_JOB
                    mvn -B test $SONAR -Pskip -Darg.line="-Xmx2048m -Djava.io.tmpdir=/tmp/$CIRCLE_JOB" -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx512m"
            - store_test_results:
                path: target/surefire-reports
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
    testsj17:
        docker:
            - image: cimg/openjdk:17.0
        steps:
            - attach_workspace:
                  at: /tmp/ws
            - run:
                  command: |
                      mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                      mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                      mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                      mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                  command: |
                      mkdir -p /tmp/$CIRCLE_JOB
                      mvn -B test -Pskip -Darg.line="-Xmx2048m" -s .circleci/settings.xml
                  environment:
                      MAVEN_OPTS: "-Xmx512m"
            - store_test_results:
                  path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj17
    testsj11:
        docker:
            - image: cimg/openjdk:17.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    mkdir -p /tmp/$CIRCLE_JOB
                    mvn -B test -Pskip -Darg.line="-Xmx2048m" -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx512m"
            - store_test_results:
                path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj17
    testsj8:
        docker:
            - image: cimg/openjdk:8.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    mkdir -p /tmp/$CIRCLE_JOB
                    mvn -B test -Pskip -Darg.line="-Xmx2048m" -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx512m"
            - store_test_results:
                path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj17
    publish:
        docker:
            - image: cimg/openjdk:18.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
                    echo $SECRING_GPG_ASC_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes
            - run:
                command: |
                    # If no symbolic name, it's a PR, will not publish results
                    if [ -n "$(git symbolic-ref HEAD 2>/dev/null )" -a "$CIRCLE_REPOSITORY_URL" == "git@github.com:fbacchella/loghublog4j2.git" ] ; then
                        PUBLISH="deploy"
                    else
                        PUBLISH="install"
                    fi
                    echo "publishing jobs: $PUBLISH"
                    mvn -B $PUBLISH -Pskip,gpgsign -Dmaven.test.skip=true -s .circleci/settings.xml -Dgpg.keyname=8C272041
                environment:
                    MAVEN_OPTS: "-Xmx2048m"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
    savecache:
        docker:
            - image: cimg/openjdk:18.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv /tmp/ws/home/circleci/project/pom.xml /home/circleci/project/
                    mv /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv /tmp/ws/home/circleci/.sonar /home/circleci/
            - save_cache:
                paths:
                    - /home/circleci/.m2/repository
                    - /home/circleci/.sonar/cache
                key: loghublog4j2-{{ checksum "pom.xml" }}
workflows:
    version: 2.1
    build_and_test:
        jobs:
            - checkout
            - build:
                  requires:
                      - checkout
            - testsj8:
                  requires:
                      - build
            - testsj11:
                  requires:
                      - build
            - testsj17:
                  requires:
                      - build
            - testsj18:
                  requires:
                      - build
                  context: "Security variables"
            - publish:
                  requires:
                      - testsj8
                      - testsj11
                      - testsj17
                      - testsj18
                  context: "Security variables"
            - savecache:
                  requires:
                      - publish
